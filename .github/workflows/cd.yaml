name: CD
on:
  push:
    branches:
      - "main"
  workflow_dispatch:

permissions:
  id-token: write

env:
  AZURE_FUNCTIONAPP_NAME: prodafCVAzureFunc  
  DOTNET_VERSION: '6.0.x'       
  ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIBTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}     
  tf_actions_working_dir: ./terraform 
  ARM_SKIP_PROVIDER_REGISTRATION: true # skip provider registration for terraform because the service principal was only granted rights at the resource group level, see https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs#skip_provider_registration
  TF_LOG: warn
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@master
    - name: 'Set up terraform'
      uses: hashicorp/setup-terraform@v2

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      working-directory: ${{ env.tf_actions_working_dir }}

    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: ${{ env.tf_actions_working_dir }}

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      working-directory: ${{ env.tf_actions_working_dir }}

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color 
      continue-on-error: true    
      working-directory: ${{ env.tf_actions_working_dir }}

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      working-directory: ${{ env.tf_actions_working_dir }}
      run: exit 1

    - name: Terraform Apply
      id: apply
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: terraform apply -auto-approve -input=false
      working-directory: ${{ env.tf_actions_working_dir }}
      
    - name: 'Login via Azure CLI'
      if: ${{ github.event_name == 'workflow_dispatch' }}
      uses: azure/login@v1
      with:
         creds: '{"clientId":"${{ secrets.AZURE_AD_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_AD_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIBTION_ID }}","tenantId":"${{ secrets.AZURE_AD_TENANT_ID }}"}'

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      if: ${{ github.event_name == 'workflow_dispatch' }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Run dotnet'
      if: ${{ github.event_name == 'workflow_dispatch' }}
      shell: pwsh
      run: dotnet build --configuration Release --output ./output
      
    - name: 'Run Azure Functions Action'
      if: ${{ github.event_name == 'workflow_dispatch' }}
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: './output'
